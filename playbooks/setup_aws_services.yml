---
- name: Set up AWS EventBridge and SES
  hosts: localhost
  gather_facts: no

  vars:
    json_file_path: "{{ lookup('env', 'HOME') }}/trade-feed-etl-health-checker_{{ aws_region }}_{{ environment }}.json"
    aws_credentials: "{{ lookup('file', json_file_path) | from_json }}"

  tasks:
    - name: Create the Lambda function
      lambda:
        state: present
        name: "trade-feed-{{ environment }}-lambda"
        region: "{{ aws_region }}"
        runtime: python3.8
        role: "arn:aws:iam::123456789012:role/service-role/YourLambdaExecutionRole"
        handler: "lambda_function.lambda_handler"
        code: /path/to/your/lambda/function.zip
        aws_access_key: "{{ aws_credentials.aws_access_key_id }}"
        aws_secret_key: "{{ aws_credentials.aws_secret_access_key }}"

    - name: Retrieve the Lambda function ARN
      command: >
        aws lambda get-function --function-name trade-feed-{{ environment }}-lambda --region {{ aws_region }}
        --query 'Configuration.FunctionArn' --output text
      register: lambda_arn

    - name: Store the Lambda function ARN in the JSON file
      lineinfile:
        path: "{{ json_file_path }}"
        line: "\"lambda_function_arn\": \"{{ lambda_arn.stdout }}\","
        insertafter: "\"ses_email\": \"{{ aws_credentials.ses_email }}\""

    - name: Set up AWS EventBridge rule
      aws_eventbridge_rule:
        name: "trade-feed-health-check"
        schedule_expression: "rate(15 minutes)"
        state: "ENABLED"
        description: "Trigger Lambda function every 15 minutes to check file count."
        region: "{{ aws_region }}"
        aws_access_key: "{{ aws_credentials.aws_access_key_id }}"
        aws_secret_key: "{{ aws_credentials.aws_secret_access_key }}"

    - name: Add Lambda target to the EventBridge rule
      aws_eventbridge_target:
        rule: "trade-feed-health-check"
        arn: "{{ lambda_arn.stdout }}"
        region: "{{ aws_region }}"
        aws_access_key: "{{ aws_credentials.aws_access_key_id }}"
        aws_secret_key: "{{ aws_credentials.aws_secret_access_key }}"

    - name: Verify an email address for SES
      aws_ses_identity:
        email: "{{ aws_credentials.ses_email }}"
        state: present
        region: "{{ aws_region }}"
        aws_access_key: "{{ aws_credentials.aws_access_key_id }}"
        aws_secret_key: "{{ aws_credentials.aws_secret_access_key }}"
